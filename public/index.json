[
{
	"uri": "/",
	"title": "Welcome to the Amazon CloudOps Networking Workshop!",
	"tags": [],
	"description": "",
	"content": "Welcome to the Amazon CloudOps Networking Workshop! In this workshop, we will go through the basics of networking in both traditional and cloud context. At the end of it, you should understand all the networking concepts at a high level and be able to deploy a basic VPC infrastructure in AWS console.\nThe workshop will consist of the following:\n 3 x 2h lectures 3 x 2h office hours (optional)  (Provide dates)\nFor additional labs and bedtime reading, you can find more material in the Further Reading section.\n"
},
{
	"uri": "/introduction.html",
	"title": "Introduction",
	"tags": [],
	"description": "",
	"content": "This workshop is designed to provide fundamental networking knowledge.\nAs a pre-requisite, you should have:\n Completed the CloudOps Linux Workshop An AWS account with AWS console access Cloudguru platform access Slack Amazon Chime client for Windows or macOS PuTTY installed and working (if you use Windows)  The agenda will spread over 3 days as below:\n Day 1 will cover traditional networking in which we will talk about all the networking concepts that you should understand before getting into AWS Cloud. Day 2 will cover AWS Networking basics and provide you the ability to setup your own infrastructure in AWS. Day 3 will cover Advanced Networking concepts in AWS.   "
},
{
	"uri": "/day-2-aws-networking-basics/aws-infrastructure.html",
	"title": "AWS Infrastructure",
	"tags": [],
	"description": "",
	"content": "AWS currently has 24 regions in its global infrastructure. A region is a physical location around the world where data centers are clustered. These data centers are grouped in Availability Zones. Each AWS Region consists of multiple, isolated, and physically separate AZ\u0026rsquo;s within a geographic area. There are 77 Availability Zones.\nAWS is responsible of protecting this infrastructure according to the Shared Responsibility Model:\n"
},
{
	"uri": "/day-1-networking-foundations/network-definition.html",
	"title": "What is a network?",
	"tags": [],
	"description": "",
	"content": "A network can be defined as a group of devices interconnected together via an edge networking component forming a dedicated and private environment.\nLet\u0026rsquo;s take an example:\nThere are several types of networks but the most common are LAN (Local Area Network) and WAN (Wide Area Network). As the names indicate, a LAN is defined by a single network (i.e. your house network) while a WAN allows interconnection between different LANs.\nThe main devices used in networking are switch and router. They work at different layers and allow connectivity inside and outside a network, respectively.\nThe switch allows all devices in the network/LAN to communicate while the router sits on the edge of the LAN in order to provide external connectivity, either to the Internet or to another network/LAN.\nSo, a switch will allow intra-LAN connectivity, a router will allow inter-LAN connectivity.\nA router is attached to a network via a network interface with a static IP address that belongs to that network. It can have different interfaces with different IP addresses, therefore belonging to different networks at the same time. In that case, the router doesn\u0026rsquo;t need to communicate with another router to reach another network, the routing is done internally.\nThe router IP address is called a Gateway IP, meaning it is the door via which all traffic is going, when a network host is trying to reach an external IP/host.\nIn real life, there are also devices that combine switch and router together, therefore can ensure both types of communication.\nIn a WAN, edge routers of the different LANs (refer to Example 2 above) route traffic to each other to allow communication between the different networks.\nNow that we have the big picture, let\u0026rsquo;s talk about networking layers.\n"
},
{
	"uri": "/day-1-networking-foundations/osi-model.html",
	"title": "OSI Model",
	"tags": [],
	"description": "",
	"content": "Networking is based on the OSI model:\nEach layer has a meaning in networking. We will not cover the layers in dept, but you can read more about in the Further Reading section.\nNetworking is based on the OSI model, it is a bit like the layers of a cake, often referred as L1, L2, L3, etc..\nLet\u0026rsquo;s pick some real life examples:\n  L1 = your home router, your cables\n  L2 = your home devices interconnecting (find example) (switch)\n  L3 = your home laptop/phone getting to the Internet (router)\n  L4 = when you stream an online movie\n  L5 = when you download a file\n  L6 = when you used Putty to login to your EC2 instance during Linux CloudOps workshop\n  L7 = a website\n  (TO SPEECH)\nNo need to remember it, just understand it.\nL1 corresponds to anything physical, such as a device or a cable. If we go back to our chat about routers and switches, the devices as such will sit in L1 since they are physical.\nHowever, although they\u0026rsquo;re physical machines, they provide functionalities corresponding to other layers. A switch does not do any routing, meaning it does not know what is an IP address, and only work out connectivity inside a LAN. So a switch, in it is logical way, will sit in L2 Data layer.\nOn the other hand, a router allows routing and communication between different networks via IP adressing, so it works at the L3 Network layer.\nL4 corresponds to anything (protocols or devices) related to transport of data across the network. (Can be firewall against L4 attacks, or examples of UDP streaming or TCP).\nWhen we talk about API or establishing an end to end path to send data, we refer to L5 Session layer.\nL6 represents a presentation layer. For example SSH to login to instance, or SSL whe we check this small lock near the HTTP of the website we\u0026rsquo;re on.\nUltimately, L7 is the website, the DNS protocol to resolve the webiste, etc.\n"
},
{
	"uri": "/day-2-aws-networking-basics/whats-a-vpc.html",
	"title": "What is a VPC?",
	"tags": [],
	"description": "",
	"content": "Amazon Virtual Private Cloud (Amazon VPC) allows you to provision resources, such as Amazon EC2 instances, into a virtual network. This virtual network is a logically isolated area within the AWS cloud that resembles a traditional network. Think about it as a private data center in the cloud.\nThe VPC is highly available as it spans all of the Availability Zones in the Region where you launch it. When you create a VPC, you provide a CIDR block that specifies the range of IP addresses for the VPC. For example, 10.0.0.0/16.\nA VPC can contain multiple subnets where you can launch AWS resources. Each subnet will reside in one Availability Zone and you can have multiple subnets in the same Availability zone.\nYou must specify a CIDR block for the subnets from the range of your VPC. For example, 10.0.0.0/24 and 10.0.1.0/24. If you launch an EC2 instance inside the first subnet, it will have an IP address inside the 10.0.0.0/24 range (for example, 10.0.0.42).\nThe VPC has an implicit router that uses route tables to direct traffic. Each subnet is associated with a route table that controls the routing for that particular subnet. If you don\u0026rsquo;t associate explicitly a subnet with a particular route table, it will be implicitly associated the main route table:\n   Destination Target     10.0.0.0/16 local    Multiple subnets can be associated with the same route table. However, you can only associate a subnet with one route table.\n"
},
{
	"uri": "/day-2-aws-networking-basics/privatepublic.html",
	"title": "Private/Public concepts",
	"tags": [],
	"description": "",
	"content": "Resources launched inside a VPC will take an IP address from the CIDR block assigned. For example, for a 10.0.0.0/16 CIDR block, an EC2 instance could have 10.0.0.42 as its IP address.\nThis IP address is private: it only makes sense inside the VPC and can\u0026rsquo;t be reached from the Internet. In order to make the EC2 instance publicly reachable, two conditions must be fulfilled: the EC2 instance must have a public IP address and an Internet Gateway attached to the VPC.\nAn Internet Gateway is a highly available component that brings connectivity to your VPC, allowing access to the Internet. Your public resources must reside in a subnet that\u0026rsquo;s associated with a route table that has a route to an Internet Gateway. This subnet is a public subnet.\nA private subnet, on the other hand, is associated with a route table that does not have a route to an Internet Gateway. The resources that should not be publicly accessible reside in these subnets. However, if your private resources need access to the Internet or other AWS services, you can add a NAT Gateway.\nThe NAT Gateway allow your EC2 instance to connect to the Internet, but prevent the Internet from connecting to it. The NAT Gateway resides in a public subnet in a certain Availability Zone. In order to allow your private subnets use the NAT Gateway to connect to the Internet, you must update the route tables they are associated with.\n"
},
{
	"uri": "/day-2-aws-networking-basics/security.html",
	"title": "Security in a VPC",
	"tags": [],
	"description": "",
	"content": "ACLs and SGs.\nA security group is a virtual stateful firewall that controls inbound and outbound network traffic to AWS resources and Amazon EC2 instances. At AWS, security groups act like a built-in firewall for your virtual servers. With these security groups, you have full control about how accessible your instances are. At the most basic level, it is just another method to filter traffic to your instances. It provides you control about what traffic to allow or deny. To determine who has access to your instances, you configure a security group rule. Rules can vary from keeping the instance completely private, completely public, or somewhere in between.\nA Network access control list (network ACL) is an optional layer of security for your VPC that acts as a firewall for controlling traffic in and out of one or more subnets\n"
},
{
	"uri": "/day-1-networking-foundations/subnetting.html",
	"title": "Subnetting",
	"tags": [],
	"description": "",
	"content": "A network (or LAN) is defined by a a block of IP addresses called a CIDR block, from which every host in the network receives an IP address.\nA CIDR indicates the size of a network, and networks are calculated with subnetting. Subnetting allows the segmentation of a bigger network in smaller networks. For example, a company could have different departments (HR, Finances, etc) and therefore wish to seggregate their corporate network based on these departments. So, each department will be allocated a portion of the big network (CIDR).\nAnatomy of a an IP address:\nAn IP address is made of 4 octets, 1 octet equals to 8 bits. So the maximum lenght of an IP address is 32 bits.\nIP addresses are translated from binaries, so each number represents an octet and an octet ranges from 0 to 255.\nExample:\n0000 0000 = 0\n1111 1111 = 255\n=\u0026gt; 1111 1111.1111 1111.1111 1111.1111 1111 = 255.255.255.255\nHow is this calculated?\nEach bit is a power of 2 (X^2) and is calculated from right to left.\nExample:\n192.168.1.0 =\u0026gt; 1100 0000.1010 1000.0000 0001.0000 0000\n(Drawing examples)\nSubnet Masks\nAn IP address is segmented in 2 parts :\n The Network section (always the left part) The Host section (always on the right).  The Host section defines the number of IPs available in a network. The Network section remains the same for all the hosts in a same network, ad is called the Network ID.\nExample:\nNetwork: 10.1.1.0/24\nHost 1: 10.1.1.1\nHost 2: 10.1.1.2\nHost 3: 10.1.1.4\nThe /24 is called the subnet mask and determines which parts of the IP are the network portion and the host portion.\n/24 represents 24 bits:\n1111 1111.1111 1111.1111 1111.0000 0000 = 255.255.255.0\n2552.255.255 = network section\n0 = host section\nGoing back to the previous example:\n10.1.1.0/24 = 10.1.1.0/255.255.255.0\nSo, the network ID is 10.1.1.0, and hosts can only be allocated in the .0 octet.\nExamples:\nExample 1:\n192.168.0.0/16 = 192.168.0.0/255.255.0.0\nNetwork ID = 192.168.0.0\nHost range = 192.168.0.0 - 192.168.255.255\nExample 2 :\n192.168.128.0/17 = 192.168.128.0/255.255.128.0\nNetwork ID = 192.168.128.0\nHost range = 192.168.128.0 - 192.168.255.255\nThe host range allows to calculate the number of hosts you can have in the network. The way to calculate is as follow: 2^(Nb of host bits).\n(That will matter if you want to know which size of a network to choose if you need X IPs)\nExample:\n 192.168.0.0/16 has 16 host bits so 2^16 = 65536 hosts 10.1.1.0/24 has 8 host bits so 2^8 = 256 hosts  So, the smaller the network portion is, the more hosts you can allocate.\nSo, as we talked about segmenting big networks into smaller networks, we can divide big CIDR into small CIDR.\nHow to calculate?\n/16 = 16 bits = 2^16 65536 hosts\n/24 = 8 bits = 2^8 = 256 hosts\n= 65536/256 = 256\nSo there are 256 /24 subnets in a /16 subnet.\n/24 = 8 bits = 2^8 = 256 hosts\n/25 = 7 bits = 2^7 = 128 hosts\n= 256/128 = 2\nSo there are 2 /25 subnets in a /24 subnet.\nOne last thing to remember is that there are always 2 IP addresses that cannot be used within a subnet:\n The first IP (10.1.1.0 if the subnet is 10.1.1.0/24) since it is reserved for the Network ID The last IP (10.1.1.255 if the subnet is 10.1.1.0/24) since it is reserved for the Broadcast IP. The broadcast IP is the IP used within a network to send messages to everyone in the network.  Not always but in most cases, as a best practice, the second IP of a subnet is dedicated to the router interface, called the Gateway IP. The gateway IP will be 10.1.1.1.1 if the subnet is 10.1.1.0/24.\n(Show IP address on ipconfig laptop - show IP allocated, network, router gateway IP.)\n"
},
{
	"uri": "/day-2-aws-networking-basics/load-balancing.html",
	"title": "Elastic Load Balancing",
	"tags": [],
	"description": "",
	"content": "Explain goal of ELB and explain the 3 different types of ELBs and their main purpose/context.\n"
},
{
	"uri": "/day-1-networking-foundations/routing.html",
	"title": "Routing",
	"tags": [],
	"description": "",
	"content": "The router comes into the picture when different hosts from different networks try to communicate. We have seen in a previous section that the router does all the routing to allow the internal hosts to talk to an external destination such as the Internet or just another network.\nThis communication is done by the means of routing tables and routing protocols.\nA route table is a source/destination map for the router to know where to send the traffic, based on the packet destination.\nThe source and destination correspond to subnets.\nThere are two types of routing:\n static routing : routes are manually added to route tables dynamic routing : routes are dynamically using routing protocols  There are several routing protocols, but the most commonly used are OSPF and BGP.\nOSPF is used to dynamically route traffic between networks of a same domain, while BGP is used to dynamically route between networks of different OSPF domains for example.\n(show a ping to show network \u0026ldquo;tool\u0026rdquo; to test connectivity).\n"
},
{
	"uri": "/day-1-networking-foundations.html",
	"title": "Day 1 - Networking fundamentals",
	"tags": [],
	"description": "",
	"content": "In this chapter, we will talk about traditional networking in order to understand the main concepts before moving to AWS.\n"
},
{
	"uri": "/day-1-networking-foundations/dnsdhcp.html",
	"title": "DNS/DHCP",
	"tags": [],
	"description": "",
	"content": "DNS stands for Domain Name System and is like an address book. It allows hosts to reach endpoints such as URLs or other machines.\nAuthoritative, root, resolver. Recursion. Record types. Real life example. Application example.\nWhat;s DHCP? How does it work with DNS? Give example of home network, or VoIP phone.\n"
},
{
	"uri": "/day-2-aws-networking-basics/route53.html",
	"title": "Route53",
	"tags": [],
	"description": "",
	"content": "Explain what is Route53 and the different routing policies.\n"
},
{
	"uri": "/day-1-networking-foundations/homework.html",
	"title": "Homework",
	"tags": [],
	"description": "",
	"content": "Link and instructions for a lab. Subnetting exercise.\n"
},
{
	"uri": "/day-3-aws-advanced-networking/hybrid-cloud.html",
	"title": "Hybrid Connectivity",
	"tags": [],
	"description": "",
	"content": "You can connect to Cloud from on premise via either DX or VPN.\nExplain the main differences.\nTalk about DX Gateway.\n"
},
{
	"uri": "/day-3-aws-advanced-networking/vpc-peering.html",
	"title": "VPC Peering",
	"tags": [],
	"description": "",
	"content": "Talk about VPC peering (and transit VPC).\n"
},
{
	"uri": "/day-3-aws-advanced-networking/vpc-endpoints.html",
	"title": "VPC Endpoints",
	"tags": [],
	"description": "",
	"content": "Talk about VPC endpoints.\n"
},
{
	"uri": "/day-2-aws-networking-basics.html",
	"title": "Day 2 - AWS Networking basics",
	"tags": [],
	"description": "",
	"content": "In this chapter, we will cover the basics of networking on the AWS Cloud.\n"
},
{
	"uri": "/day-3-aws-advanced-networking/transit-gateway.html",
	"title": "Transit Gateway",
	"tags": [],
	"description": "",
	"content": "Talk about Transit Gateway.\n"
},
{
	"uri": "/day-3-aws-advanced-networking.html",
	"title": "Day 3 - AWS Advanced Networking",
	"tags": [],
	"description": "",
	"content": "In this chapter, we will cover advanced concepts of AWS networking.\n"
},
{
	"uri": "/further_reading.html",
	"title": "Further Reading",
	"tags": [],
	"description": "",
	"content": "OSI:\nhttps://www.networkworld.com/article/3239677/the-osi-model-explained-and-how-to-easily-remember-its-7-layers.html\nhttps://medium.com/learn-with-the-lean-programmer/osi-model-layers-explained-ee1d43058c1f\nSubnetting:\nTutorial: https://acloud.guru/overview/124ee946-2249-40c2-a664-aa26af523920?_ga=2.78699287.2097752874.1606729826-1802322676.1602598892\n"
},
{
	"uri": "/categories.html",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags.html",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]